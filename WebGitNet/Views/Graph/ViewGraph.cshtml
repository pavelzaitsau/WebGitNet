@model IEnumerable<GraphEntry>
@{
    ViewBag.Title = "Repository Graph";

    var refTypeIcons = new Dictionary<RefType, string>
    {
        { RefType.Branch, "icon-branch" },
        { RefType.RemoteBranch, "icon-branch" },
        { RefType.Stash, "icon-bookmark" },
        { RefType.Tag, "icon-tag" },
    };

    var refTypeLabels = new Dictionary<RefType, string>
    {
        { RefType.Branch, "label-success" },
        { RefType.RemoteBranch, "label-important" },
        { RefType.Stash, "label-inverse" },
        { RefType.Tag, "label-info" },
    };
}

@section headers
{
    <link href="@Url.Content("~/Content/graph.css")" rel="stylesheet" type="text/css" />
    <script src="@Url.Content("~/Scripts/graph.js")"></script>
}

<div class="modal hide fade" id="graph-settings" data-backdrop="false">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal">&times;</button>
        <h3>Graph Settings</h3>
    </div>
    <div class="modal-body">
        <form class="form-horizontal" action="#" method="get">
            <div class="control-group">
                <label class="control-label">Graph Alignment:</label>
                <div class="controls">
                    <label class="radio inline"><input name="align" type="radio" value="left" /> Left</label>
                    <label class="radio inline"><input name="align" type="radio" value="right" checked="checked" /> Right</label>
                </div>
            </div>
            <div class="control-group">
                <div class="controls">
                    <label class="checkbox"><input name="outline" type="checkbox" /> Follow Contour</label>
                </div>
            </div>
            <div class="control-group">
                <label class="control-label">Line Width:</label>
                <div class="controls"><input name="lineWidth" type="text" value="2" /></div>
            </div>
            <div class="control-group">
                <div class="controls">
                    <label class="checkbox"><input name="curveLine" type="checkbox" checked="checked" /> Curved Lines</label>
                </div>
            </div>
            <div class="control-group">
                <label class="control-label">Dot Radius:</label>
                <div class="controls"><input name="dotRadius" type="text" value="3" /></div>
            </div>
            <div class="control-group">
                <label class="control-label">Dot Border:</label>
                <div class="controls"><input name="dotBorder" type="text" value="0" /></div>
            </div>
            <div class="control-group">
                <label class="control-label">Column Width:</label>
                <div class="controls"><input name="colWidth" type="text" value="13" /></div>
            </div>
            <div class="control-group">
                <label class="control-label">Row Height:</label>
                <div class="controls"><input name="rowHeight" type="text" value="24" /></div>
            </div>
        </form>
    </div>
    <div class="modal-footer">
        <button class="btn btn-primary"  data-toggle="modal" data-target="#graph-settings">Done</button>
        <button class="btn btn-link pull-left" id="reset-settings" type="button">Reset to Defaults</button>
    </div>
</div>

@Html.Partial("Pagination", (PaginationInfo)ViewBag.PaginationInfo)

<a href="#" class="pull-right" data-toggle="modal" data-target="#graph-settings">Graph Settings</a>

<div class="graph">
    <canvas id="graph-canvas" width="0" height="0">
    </canvas>
@foreach (var e in Model)
{
    <div class="graph-node" data-node="@e.Node" data-parent-nodes="@string.Join(",", e.ParentNodes)" data-incoming-nodes="@string.Join(",", e.IncomingNodes)">
        @foreach (var r in e.Refs)
        {
            <span class="label @(refTypeLabels[r.RefType])"><i class="@(refTypeIcons[r.RefType]) icon-white"></i>@r.Name</span>
        }
        @Html.ActionLink(
            string.IsNullOrWhiteSpace(e.LogEntry.Subject) ? "(no subject)" : e.LogEntry.Subject,
            "ViewCommit",
            "Browse",
            new { @object = e.LogEntry.CommitHash },
            new { title = string.Format("By {0} at {1}", e.LogEntry.Author, e.LogEntry.AuthorDate.ToString("u")) })
    </div>
}
</div>

@Html.Partial("Pagination", (PaginationInfo)ViewBag.PaginationInfo)
