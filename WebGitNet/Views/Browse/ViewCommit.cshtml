@model IList<DiffInfo>

@{
    var commitLogEntry = (LogEntry)ViewBag.CommitLogEntry;

    Func<char, string> diffLineStyle = c =>
    {
        switch (c)
        {
            case '+':
                return "diff-line-add";
            case '-':
                return "diff-line-remove";
            case ' ':
                return "diff-line-context";
            default:
                return "diff-line-info";
        }
    };

    ViewBag.Title = "View Commit";
}

@section headers
{
    <script src="@Url.Content("~/Scripts/jquery.timeago.min.js")" type="text/javascript"></script>
    <script type="text/javascript">
        $(function () {
            $("div.date").timeago();
        });
    </script>
}

<style type="text/css">
    .diff-line { white-space: pre; }
    .diff-line-add { background: #afa; }
    .diff-line-remove { background: #faa; }
    .diff-line-info { background: #ddd; }
</style>


@Html.Partial("LogEntry", commitLogEntry, new ViewDataDictionary { { "Details", true } })

@foreach (var diff in Model.OrderByDescending(d => d.Deleted || d.Added).ThenBy(d => d.DestinationFile))
{
    if (!diff.Deleted)
    {
        <div class="pull-right">@Html.ActionLink("view file", "ViewBlob", new { repo = (string)ViewBag.RepoName, @object = commitLogEntry.Tree, path = @diff.DestinationFile })</div>
    }
    <div>
        <i class="@(diff.Added ? "icon-plus" : diff.Deleted ? "icon-minus" : diff.Renamed || diff.Copied ? "icon-refresh" : "icon-file")"></i> /@diff.DestinationFile
        @if (diff.Renamed)
        {
            @:(renamed from /@diff.SourceFile)
        }
        else if (diff.Copied)
        {
            @:(copied from /@diff.SourceFile)
        }
        else if (diff.Added)
        {
            @:(added)
        }
        else if (diff.Deleted)
        {
            @:(deleted)
        }
    </div>
    if (!diff.Deleted && !diff.Added)
    {
        <div>
            <pre>
                @foreach (var line in diff.Lines)
                {
                    <span class="diff-line @diffLineStyle(line[0])">@Html.Raw(Html.Encode(line))</span>
                    @Environment.NewLine
                }
            </pre>
        </div>
    }
}
